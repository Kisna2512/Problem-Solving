class Solution {
public:
   static  bool sortbysecond(pair<int,int> &a,pair<int,int> &b)
    {
        if(a.second==b.second)
        {
            return a.first <b.first;
        }
        return a.second < b.second;
    }
    vector<int> kWeakestRows(vector<vector<int>>& mat, int k) {
        vector<pair<int,int>> arr;
       
        for(int i=0;i<mat.size();i++)
        {
             int cnt=0;
            for(int j=0;j<mat[i].size();j++)
            {
                if(mat[i][j]==1)
                {
                    cnt++;
                }
                else 
                {
                    break;
                }
            }
            arr.push_back(make_pair(i,cnt));
        }
        
        sort(arr.begin(),arr.end(),sortbysecond);
        
        
        vector<int> ans;
        for(int i=0;i<k;i++)
        {
            ans.push_back(arr[i].first);
        }
        return ans; 
    }
};